{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Desktop/gitcomparer/src/Components/Results.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst queryString = require(\"query-string\");\n\nimport api from \"./api\";\nimport { Link } from \"react-router-dom\";\nimport PlayerPreview from \"./PlayerPreview\";\nimport Spinner from \"./Spinner/Spinner\";\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winner: null,\n      loser: null,\n      error: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    var players = queryString.parse(this.props.location.search);\n    api.battle([players.playerOneName, players.playerTwoName]).then(function (players) {\n      if (players === null) {\n        return this.setState(function () {\n          return {\n            error: \"Looks like there was an error. Check that both users exist on Github.\",\n            loading: false\n          };\n        });\n      }\n\n      this.setState(function () {\n        return {\n          error: null,\n          winner: players[0],\n          loser: players[1],\n          loading: false\n        };\n      });\n    }.bind(this));\n  }\n\n  render() {\n    var error = this.state.error;\n    var winner = this.state.winner;\n    var loser = this.state.loser;\n    var loading = this.state.loading;\n\n    if (loading === true) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, error), /*#__PURE__*/React.createElement(Link, {\n        to: \"/battle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"Reset\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Player, {\n      label: \"Winner\",\n      score: winner.score,\n      profile: winner.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Player, {\n      label: \"Loser\",\n      score: loser.score,\n      profile: loser.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Results;","map":{"version":3,"sources":["/home/aditya/Desktop/gitcomparer/src/Components/Results.js"],"names":["React","PropTypes","queryString","require","api","Link","PlayerPreview","Spinner","Results","Component","constructor","props","state","winner","loser","error","loading","componentDidMount","players","parse","location","search","battle","playerOneName","playerTwoName","then","setState","bind","render","score","profile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst queryString = require(\"query-string\");\nimport api from \"./api\";\nimport { Link } from \"react-router-dom\";\nimport PlayerPreview from \"./PlayerPreview\";\nimport Spinner from \"./Spinner/Spinner\";\n\nclass Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      winner: null,\n      loser: null,\n      error: null,\n      loading: true,\n    };\n  }\n  componentDidMount() {\n    var players = queryString.parse(this.props.location.search);\n\n    api.battle([players.playerOneName, players.playerTwoName]).then(\n      function (players) {\n        if (players === null) {\n          return this.setState(function () {\n            return {\n              error:\n                \"Looks like there was an error. Check that both users exist on Github.\",\n              loading: false,\n            };\n          });\n        }\n\n        this.setState(function () {\n          return {\n            error: null,\n            winner: players[0],\n            loser: players[1],\n            loading: false,\n          };\n        });\n      }.bind(this)\n    );\n  }\n  render() {\n    var error = this.state.error;\n    var winner = this.state.winner;\n    var loser = this.state.loser;\n    var loading = this.state.loading;\n\n    if (loading === true) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return (\n        <div>\n          <p>{error}</p>\n          <Link to=\"/battle\">Reset</Link>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"row\">\n        <Player label=\"Winner\" score={winner.score} profile={winner.profile} />\n        <Player label=\"Loser\" score={loser.score} profile={loser.profile} />\n      </div>\n    );\n  }\n}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}